local ConsoleApp = {
    name = "Console",
    version = "1.5",
    main = "main",
    iconText = "CMD",
    iconTextColor = {255, 255, 255},
    icon = json.decode('[[[70,110,200],[68,107,197],[67,106,196],[66,105,195],[65,103,193],[64,102,192],[63,101,191],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[180,210,255],[58,95,185],[57,93,183],[56,92,182],[180,210,255],[55,90,180],[54,88,178],[53,87,177],[180,210,255],[51,85,175],[50,83,173],[49,82,172],[180,210,255],[47,80,170],[46,78,168],[45,77,167],[180,210,255],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[255,95,90],[255,95,90],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[180,210,255],[59,96,186],[58,95,185],[57,93,183],[180,210,255],[55,91,181],[55,90,180],[54,88,178],[180,210,255],[52,86,176],[51,85,175],[50,83,173],[180,210,255],[48,81,171],[47,80,170],[46,78,168],[180,210,255],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[255,95,90],[255,95,90],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[180,210,255],[56,92,182],[55,91,181],[55,90,180],[180,210,255],[53,87,177],[52,86,176],[51,85,175],[180,210,255],[49,82,172],[48,81,171],[47,80,170],[180,210,255],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[255,95,90],[255,95,90],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[57,93,183],[56,92,182],[55,91,181],[180,210,255],[54,88,178],[53,87,177],[52,86,176],[180,210,255],[50,83,173],[49,82,172],[48,81,171],[180,210,255],[46,78,168],[45,77,167],[44,76,166],[180,210,255],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[180,210,255],[58,95,185],[57,93,183],[56,92,182],[180,210,255],[55,90,180],[54,88,178],[53,87,177],[180,210,255],[51,85,175],[50,83,173],[49,82,172],[180,210,255],[47,80,170],[46,78,168],[45,77,167],[180,210,255],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[180,210,255],[59,96,186],[58,95,185],[57,93,183],[180,210,255],[55,91,181],[55,90,180],[54,88,178],[180,210,255],[52,86,176],[51,85,175],[50,83,173],[180,210,255],[48,81,171],[47,80,170],[46,78,168],[180,210,255],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[180,210,255],[56,92,182],[55,91,181],[55,90,180],[180,210,255],[53,87,177],[52,86,176],[51,85,175],[180,210,255],[49,82,172],[48,81,171],[47,80,170],[180,210,255],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[90,200,90],[90,200,90],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[57,93,183],[56,92,182],[55,91,181],[180,210,255],[54,88,178],[53,87,177],[52,86,176],[180,210,255],[50,83,173],[49,82,172],[48,81,171],[180,210,255],[46,78,168],[45,77,167],[44,76,166],[180,210,255],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[90,200,90],[90,200,90],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[180,210,255],[58,95,185],[57,93,183],[56,92,182],[180,210,255],[55,90,180],[54,88,178],[53,87,177],[180,210,255],[51,85,175],[50,83,173],[49,82,172],[180,210,255],[47,80,170],[46,78,168],[45,77,167],[180,210,255],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[90,200,90],[90,200,90],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[180,210,255],[59,96,186],[58,95,185],[57,93,183],[180,210,255],[55,91,181],[55,90,180],[54,88,178],[180,210,255],[52,86,176],[51,85,175],[50,83,173],[180,210,255],[48,81,171],[47,80,170],[46,78,168],[180,210,255],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[180,210,255],[56,92,182],[55,91,181],[55,90,180],[180,210,255],[53,87,177],[52,86,176],[51,85,175],[180,210,255],[49,82,172],[48,81,171],[47,80,170],[180,210,255],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[57,93,183],[56,92,182],[55,91,181],[180,210,255],[54,88,178],[53,87,177],[52,86,176],[180,210,255],[50,83,173],[49,82,172],[48,81,171],[180,210,255],[46,78,168],[45,77,167],[44,76,166],[180,210,255],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[180,210,255],[58,95,185],[57,93,183],[56,92,182],[180,210,255],[55,90,180],[54,88,178],[53,87,177],[180,210,255],[51,85,175],[50,83,173],[49,82,172],[180,210,255],[47,80,170],[46,78,168],[45,77,167],[180,210,255],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[180,210,255],[59,96,186],[58,95,185],[57,93,183],[180,210,255],[55,91,181],[55,90,180],[54,88,178],[180,210,255],[52,86,176],[51,85,175],[50,83,173],[180,210,255],[48,81,171],[47,80,170],[46,78,168],[180,210,255],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[180,210,255],[56,92,182],[55,91,181],[55,90,180],[180,210,255],[53,87,177],[52,86,176],[51,85,175],[180,210,255],[49,82,172],[48,81,171],[47,80,170],[180,210,255],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[100,140,220],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[180,210,255],[58,95,185],[57,93,183],[56,92,182],[180,210,255],[55,90,180],[54,88,178],[53,87,177],[180,210,255],[51,85,175],[50,83,173],[49,82,172],[180,210,255],[47,80,170],[46,78,168],[45,77,167],[180,210,255],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[180,210,255],[59,96,186],[180,210,255],[57,93,183],[180,210,255],[55,91,181],[55,90,180],[54,88,178],[180,210,255],[52,86,176],[51,85,175],[50,83,173],[180,210,255],[48,81,171],[180,210,255],[46,78,168],[180,210,255],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[180,210,255],[56,92,182],[55,91,181],[55,90,180],[180,210,255],[53,87,177],[52,86,176],[51,85,175],[180,210,255],[49,82,172],[48,81,171],[180,210,255],[180,210,255],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[57,93,183],[56,92,182],[55,91,181],[180,210,255],[54,88,178],[53,87,177],[52,86,176],[180,210,255],[50,83,173],[49,82,172],[48,81,171],[180,210,255],[46,78,168],[45,77,167],[44,76,166],[180,210,255],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[180,210,255],[180,210,255],[57,93,183],[56,92,182],[180,210,255],[55,90,180],[54,88,178],[53,87,177],[180,210,255],[51,85,175],[50,83,173],[49,82,172],[180,210,255],[180,210,255],[46,78,168],[45,77,167],[180,210,255],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[180,210,255],[59,96,186],[180,210,255],[57,93,183],[180,210,255],[55,91,181],[55,90,180],[54,88,178],[180,210,255],[52,86,176],[51,85,175],[50,83,173],[180,210,255],[48,81,171],[180,210,255],[46,78,168],[180,210,255],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[180,210,255],[56,92,182],[55,91,181],[55,90,180],[180,210,255],[53,87,177],[52,86,176],[51,85,175],[180,210,255],[49,82,172],[48,81,171],[180,210,255],[180,210,255],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[180,210,255],[57,93,183],[56,92,182],[55,91,181],[180,210,255],[54,88,178],[53,87,177],[52,86,176],[180,210,255],[50,83,173],[49,82,172],[48,81,171],[180,210,255],[46,78,168],[45,77,167],[44,76,166],[180,210,255],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[69,108,198],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[30,50,120],[100,140,220],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]],[[70,110,200],[68,107,197],[67,106,196],[66,105,195],[65,103,193],[64,102,192],[63,101,191],[62,100,190],[61,98,188],[60,97,187],[59,96,186],[58,95,185],[57,93,183],[56,92,182],[55,91,181],[55,90,180],[54,88,178],[53,87,177],[52,86,176],[51,85,175],[50,83,173],[49,82,172],[48,81,171],[47,80,170],[46,78,168],[45,77,167],[44,76,166],[43,75,165],[42,73,163],[41,72,162],[40,71,161],[40,70,160]]]'),
    system = true,
    scripts = {
        main = [[
local logStart = 0
local command = ""
local cursorPos = 1
local cursorBlink = 0
local cursorVisible = true

local CONSOLE_LOG_SIZE = 100
local CONSOLE_LINE_HEIGHT = 16
local CONSOLE_MARGIN = 10

local draw = function()
GPU:clear()

local text = "Console"
DTX(MONITOR.resolution.width/2 - (#text * 6), 10, text, {255, 255, 255}, 2)
DRE(MONITOR.resolution.width - 20, 10, 10, 10, {255, 0, 0})
DRE(MONITOR.resolution.width - 35, 10, 10, 10, {0, 100, 255})

local logs = read(1) == 0 and {} or read(1)
local startY = CONSOLE_MARGIN
local visibleLines = math.floor((MONITOR.resolution.height - (CONSOLE_MARGIN * 2 + CONSOLE_LINE_HEIGHT)) / CONSOLE_LINE_HEIGHT)
logStart = math.max(1, #logs - visibleLines + 1)

for i = logStart, #logs do
local log = logs[i]
DTX(CONSOLE_MARGIN, startY, log.text, log.color, 1)
startY = startY + CONSOLE_LINE_HEIGHT
end

DTX(CONSOLE_MARGIN, MONITOR.resolution.height - (CONSOLE_MARGIN + CONSOLE_LINE_HEIGHT) + 3, "> " .. command, {255, 255, 255}, 1)

cursorBlink = cursorBlink + 1
if cursorBlink >= 20 then
cursorVisible = not cursorVisible
cursorBlink = 0
end
                
if cursorVisible then
local cursorX = CONSOLE_MARGIN + (#("> " .. string.sub(command, 1, cursorPos-1)) * 6)
DRE(cursorX, MONITOR.resolution.height - (CONSOLE_MARGIN + CONSOLE_LINE_HEIGHT) + 3, 
2, (CONSOLE_LINE_HEIGHT - 6), {255, 255, 255})
end
end

local function addLog(text, color)
color = color or {255, 255, 255}
local logs = read(1) == 0 and {} or read(1)
table.insert(logs, {text = text, color = color})

if #logs > CONSOLE_LOG_SIZE then
table.remove(logs, 1)
end

write(1, logs)
draw()
end

local function executeCommand(cmd)
addLog("> " .. cmd, {0, 255, 0})

command = ""
cursorPos = 1

if cmd == "clear" then
write(1, {})
elseif cmd == "help" then
addLog("Available commands:", {255, 255, 0})
addLog("clear - Clear console", {200, 200, 200})
addLog("help - Show this help", {200, 200, 200})
addLog("apps - List installed apps", {200, 200, 200})
addLog("uninstall nameApp - Delete installed app", {200, 200, 200})
addLog("time - System time", {200, 200, 200})
addLog("ram, cpu, gpu, psu, mb,", {200, 200, 200})
addLog("cooler, monitor, disk,", {200, 200, 200})
addLog("shutdown - Completion of work", {200, 200, 200})
addLog("reboot - Reboot system", {200, 200, 200})
addLog("updates - update apps", {200, 200, 200})
addLog("mkDir path - new folder", {200, 200, 200})

elseif cmd == "updates" then
    OC.updateAppsSearch(function(updates)
        if #updates == 0 then
            addLog("NO updates apps", {255, 255, 200})
            return nil
        end
        addLog("Updates apps: ", {200, 255, 200})
        for i=1, #updates do
            if updates[i].newApp.system and not updates[i].oldApp.system then
                addLog("Error no system: "..updates[i].name .. "  " .. updates[i].oldVersion .. " > " .. updates[i].newVersion, {255, 200, 200})
                goto countine
            end
            OC.is_installing = true
            OC:installApp(updates[i].newApp, function(success)
                if not success then
                    addLog("Error update: "..updates[i].name .. "  " .. updates[i].oldVersion .. " > " .. updates[i].newVersion, {255, 200, 200})
                    OC.is_installing = false
                    return
                end

                addLog("App: "..updates[i].name .. "  " .. updates[i].oldVersion .. " > " .. updates[i].newVersion, {200, 200, 200})
                OC.is_installing = false
            end)
            ::countine::
        end
    end)
elseif string.sub(cmd, 1, 6) == "mkdir " then
    local path = string.gsub(cmd, "mkdir ", "")
    FILE_SYSTEM:mkDir(path, function(success, err)
        if not success then
            addLog("[FILE_SYSTEM] Error: ".. err, {255, 200, 200})
            return
        end
        addLog("[FILE_SYSTEM] Success create folder at path: ".. path, {200, 255, 200})
    end, true)

elseif string.sub(cmd, 1, 6) == "rmdir " then
    local path = string.gsub(cmd, "rmdir ", "")
    FILE_SYSTEM:rmDir(path, function(success, err)
        if not success then
            addLog("[FILE_SYSTEM] Error: ".. err, {255, 200, 200})
            return
        end
        addLog("[FILE_SYSTEM] Success remove folder at path: ".. path, {200, 255, 200})
    end, true)

elseif string.sub(cmd, 1, 10) == "uninstall " then
local name = string.gsub(cmd, "uninstall ", "")
OC:uninstallApp(name, function(success)
if success then
addLog("[OS] Success: uninstall "..name, {200, 200, 200})
else
addLog("[OS] Error: uninstall "..name, {200, 200, 200})
end
end)
elseif cmd == "ram" then
local info = RAM:getInfo()
for key, value in pairs(info) do
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "time" then
addLog("Time: " .. os.time(), {200, 200, 200})
elseif cmd == "shutdown" then
os.exit()
elseif cmd == "reboot" then
OC:reboot()
elseif cmd == "cpu" then
local info = CPU:getInfo()
for key, value in pairs(info) do
if type(value == "table") then
value = json.encode(value)
end
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "gpu" then
local info = GPU:getInfo()
for key, value in pairs(info) do
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "psu" then
local info = PSU:getInfo()
for key, value in pairs(info) do
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "mb" then
addLog("Model: "..MB.model, {200, 200, 200})
addLog("Version: "..MB.version, {200, 200, 200})
elseif cmd == "cooler" then
local info = COOLER:getInfo()
for key, value in pairs(info) do
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "monitor" then
local info = MONITOR:getInfo()
for key, value in pairs(info) do
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "disk" then
local info = HDD:getInfo()
for key, value in pairs(info) do
addLog(key..": "..tostring(value), {200, 200, 200})
end
elseif cmd == "apps" then
local file = FILE_SYSTEM:open("Tinu/apps.json", "r")
file:read(function (apps)
file.close()
apps = json.decode(apps)
addLog("Installed apps (" .. #apps .. "):", {255, 255, 0})
for i, appIndex in ipairs(apps) do
file = FILE_SYSTEM:open("User/AppData/"..appIndex.."/app.json", "r")
file:read(function(appJson)
file.close()
if not appJson or appJson == "" then
print("[OS] Error: App not found - " .. appIndex)
return
end

local app = json.decode(appJson)
if app then
addLog(string.format("%d. %s v%s", i, app.name, app.version), {200, 200, 200})
end
end)
end
end)

else
addLog("Unknown command: " .. cmd .. ", 'help' command information.", {255, 100, 100})
end
end

addEvent("keypressed", function(key)
if key == "return" then
if #command > 0 then
executeCommand(command)
end
elseif key == "backspace" then
if cursorPos > 1 then
command = string.sub(command, 1, cursorPos-2) .. string.sub(command, cursorPos)
cursorPos = cursorPos - 1
end
elseif key == "left" then
if cursorPos > 1 then
cursorPos = cursorPos - 1
end
elseif key == "right" then
if cursorPos <= #command then
cursorPos = cursorPos + 1
end
elseif key == "home" then
cursorPos = 1
elseif key == "end" then
cursorPos = #command + 1
elseif key == "space" then
command = string.sub(command, 1, cursorPos-1) .. " " .. string.sub(command, cursorPos)
cursorPos = cursorPos + 1
elseif #key == 1 then
command = string.sub(command, 1, cursorPos-1) .. key .. string.sub(command, cursorPos)
cursorPos = cursorPos + 1
end
                
cursorBlink = 0
cursorVisible = true
draw()
end)

for i=1, #OC.logs do
    addLog(OC.logs[i], {255, 255, 255})
end

draw()

while true do
SLEEP(0.05)
end
        ]]
    }
}

return ConsoleApp